volumes:
  portrainer_data:
    name: portrainer_data
  # nextcloud:
  #   name: nextcloud_data
  # nextclouddb:
  #   name: nextcloud_db
  # qbt_data:
  #   name: qbt_data
  # jellyfin_config:
  #   name: jellyfin_config
  # jellyfin_cache:
  #   name: jellyfin_cache
  # gitlabrunner_config:
  #   name: gitlabrunner_config
  # gitlab_data:
  #   name: gitlab_data
  # gitlab_logs:
  #   name: gitlab_logs
  # gitlab_config:
  #   name: gitlab_config
  # homebridge_data:
  #   name: homebridge_data

services:
  # samba:
  #   image: crazymax/samba
  #   container_name: samba
  #   network_mode: host
  #   volumes:
  #     - "./data:/data"
  #     - "/data/media:/samba/media"
  #   environment:
  #     - "TZ=Europe/Amsterdam"
  #     - "SAMBA_LOG_LEVEL=0"
  #   restart: unless-stopped
  # nextclouddb:
  #   image: mariadb:10.6
  #   container_name: nextclouddb
  #   restart: always
  #   command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
  #   volumes:
  #     - nextclouddb:/var/lib/mysql
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=123321
  #     - MYSQL_PASSWORD=123321
  #     - MYSQL_DATABASE=nextcloud
  #     - MYSQL_USER=nextcloud

  # nextcloud:
  #   image: nextcloud
  #   container_name: nextcloud
  #   restart: always
  #   ports:
  #     - 8099:80
  #   links:
  #     - nextclouddb
  #   volumes:
  #     - nextcloud:/var/www/html
  #     - /data/media:/data/media
  #   environment:
  #     - MYSQL_PASSWORD=123321
  #     - MYSQL_DATABASE=nextcloud
  #     - MYSQL_USER=nextcloud
  #     - MYSQL_HOST=nextclouddb

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /docker/appdata/calibre-web/config:/config
      - /data/media/books:/books
    ports:
      - 8083:8083
    restart: unless-stopped

  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PASSWORD= #optional
      - CLI_ARGS= #optional
    volumes:
      - /docker/appdata/calibre/config:/config
      - /data/media/books:/data/media/books
    ports:
      - 8082:8080
      - 8181:8181
      - 8081:8081
      - 9000:9000
    restart: unless-stopped

  readarr:
    container_name: readarr
    image: ghcr.io/hotio/readarr
    ports:
      - "8787:8787"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - /docker/appdata/readarr/config:/config
      - /data/media/downloads:/data/media/downloads
      - /data/media/books:/data/media/books

  portainer:
    image: portainer/portainer-ce:2.25.1
    container_name: portainer
    restart: unless-stopped
    ports:
      - 8000:8000
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portrainer_data:/data

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      # - LOG_LEVEL=debug
      - TZ=Europe/Amsterdam
      - PORT=5055 #optional
    ports:
      - 5055:5055
    volumes:
      - /docker/appdata/overserr/config:/app/config
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - /docker/appdata/plex:/config
      - /data/media/tvshows:/data/media/tvshows
      - /data/media/movies:/data/media/movies
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - /docker/appdata/qbittorrent/appdata:/config
      - /data/media/downloads:/data/media/downloads
      - /data/media/movies:/data/media/movies
      - /data/media/tvshows:/data/media/tvshows
      - /data/media/books:/data/media/books
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:latest
    ports:
      - 9696:9696
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - /docker/appdata/prowlarr:/config

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 7878:7878
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/appdata/radarr:/config
      - /data:/data

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 8989:8989
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/appdata/sonarr:/config
      - /data:/data

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /docker/appdata/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/appdata/homarr/configs:/app/data/configs
      - /docker/appdata/homarr/icons:/app/public/icons
      - /docker/appdata/homarr/data:/data
    ports:
      - 7575:7575

  # pihole:
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   privileged: true
  #   network_mode: host
  #   # # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
  #   # ports:
  #   #   - "53:53/tcp"
  #   #   - "53:53/udp"
  #   #   # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
  #   #   - "80:80/tcp"
  #   environment:
  #     TZ: "Europe/Amsterdam"
  #     WEBPASSWORD: "123321"
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - "/docker/appdata/pihole/etc-pihole:/etc/pihole"
  #     - "/docker/appdata/pihole/etc-dnsmasq.d:/etc/dnsmasq.d"
  #   #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  #   # cap_add:
  #   # - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
  #   restart: unless-stopped

  # bazarr:
  #   container_name: bazarr
  #   image: ghcr.io/hotio/bazarr:latest
  #   restart: unless-stopped
  #   logging:
  #     driver: json-file
  #   ports:
  #     - 6767:6767
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Amsterdam
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /docker/appdata/bazarr:/config
  #     - /data/media:/data/media
  # sabnzbd:
  #   container_name: sabnzbd
  #   image: ghcr.io/hotio/sabnzbd:latest
  #   restart: unless-stopped
  #   logging:
  #     driver: json-file
  #   ports:
  #     - 8080:8080
  #     - 9090:9090
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Amsterdam
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /docker/appdata/sabnzbd:/config
  #     - /data/usenet:/data/usenet:rw
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    ports:
      - 8887:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  # qbittorrent:
  #   image: lscr.io/linuxserver/qbittorrent:4.6.2
  #   container_name: qbittorrent
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     - WEBUI_PORT=8080
  #   volumes:
  #     - qbt_data:/config
  #     - /mnt/media/movies:/downloads/movies
  #     - /mnt/media/tvshows:/downloads/tvshows
  #     - /mnt/media/files:/downloads/files
  #     - /mnt/media/tmp:/downloads/incomplete
  #   ports:
  #     - 8080:8080
  #     - 6881:6881
  #     - 6881:6881/udp
  #   restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    volumes:
      - /docker/appdata/jellyfil/config:/config
      - /docker/appdata/jellyfil/cache:/config
      - /data/media/tvshows:/data/media/tvshows
      - /data/media/movies:/data/media/movies
    restart: unless-stopped
    network_mode: host
    group_add:
      - "104"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    ports:
      - 8096:8096
  # homebridge:
  #   image: homebridge/homebridge:2023-12-30
  #   restart: unless-stopped
  #   network_mode: host
  #   container_name: homebridge
  #   volumes:
  #     - homebridge_data:/homebridge
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "10m"
  #       max-file: "1"
  #   healthcheck:
  #     test: curl --fail localhost:8581 || exit 1
  #     interval: 60s
  #     retries: 5
  #     start_period: 300s
  #     timeout: 2s

  # https://github.com/ikatson/rqbit
  # rqbit:
  #   restart: unless-stopped
  #   container_name: rqbit
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.rqbit
  #   volumes:
  #     - ./downloads:/downloads
  #   ports:
  #     - 3030:3030

  # gitlab:
  #   image: "gitlab/gitlab-ce:latest"
  #   restart: "unless-stopped"
  #   container_name: gitlab
  #   hostname: "192.168.3.111"
  #   environment:
  #     GITLAB_OMNIBUS_CONFIG: |
  #       external_url 'http://192.168.3.111:8888'
  #       # Add any other gitlab.rb configuration here, each on its own line
  #   ports:
  #     - "8888:8888"
  #     - "2224:22"
  #   volumes:
  #     - gitlab_config:/etc/gitlab'
  #     - gitlab_logs:/var/log/gitlab'
  #     - gitlab_data:/var/opt/gitlab'
  #   shm_size: "256m"

  # gitlab-runner:
  #   restart: "unless-stopped"
  #   container_name: gitlab-runner
  #   image: gitlab/gitlab-runner:alpine
  #   volumes:
  #     - gitlabrunner_config:/etc/gitlab-runner:z
